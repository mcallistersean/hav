user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    use epoll;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    proxy_cache_path /tmp/nginx-thumbnails levels=1:2 keys_zone=thumbnail_cache:50M inactive=10d max_size=2000M;

    server {
        listen 80 default_server;
        include       mime.types;
        sendfile        on;
        keepalive_timeout  65;

        set $secret_key "IMAGESERVER_SECRET";



        location ~ ^/(?P<key>[\w-]+)/(?P<operation>[^/]*)$ {

            limit_except GET {
                deny  all;
            }

            secure_link $key;
            secure_link_md5 "$operation?$args:$secret_key";

            # used for debugging
            add_header 'X-querystring' 'KEY:$key URI:$request_uri SL:$secure_link SECRET:$operation?$query_string:$secret_key';

            if ($secure_link = "") {
                # The security check failed, invalid key!
                return 403;
            }

            rewrite ^ /$operation break;

            proxy_pass http://imaginary:9000;
            proxy_cache thumbnail_cache;
            proxy_cache_lock on;
            proxy_cache_valid 10d;
            proxy_cache_use_stale error timeout invalid_header updating;
            proxy_http_version 1.1;
            expires 30d;
        }

        location ~ ^/(?P<key>[\w-]+)/(?P<path>.*)$  {
            limit_except GET {
                deny all;
            }

            secure_link $key;
            secure_link_md5 "$path:$secret_key";

            if ($secure_link = "") {
                # The security check failed, invalid key!
                return 403;
            }

            rewrite ^ /$path break;
            root /var/www;
        }

    }


}




